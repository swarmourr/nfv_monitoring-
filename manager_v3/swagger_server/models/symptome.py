# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Symptome(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, symptome: str='false'):  # noqa: E501
        """Symptome - a model defined in Swagger

        :param symptome: The symptome of this Symptome.  # noqa: E501
        :type symptome: str
        """
        self.swagger_types = {
            'symptome': str
        }

        self.attribute_map = {
            'symptome': 'symptome'
        }

        self._symptome = symptome

    @classmethod
    def from_dict(cls, dikt) -> 'Symptome':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The symptome of this Symptome.  # noqa: E501
        :rtype: Symptome
        """
        return util.deserialize_model(dikt, cls)

    @property
    def symptome(self) -> str:
        """Gets the symptome of this Symptome.

        generated symptome  # noqa: E501

        :return: The symptome of this Symptome.
        :rtype: str
        """
        return self._symptome

    @symptome.setter
    def symptome(self, symptome: str):
        """Sets the symptome of this Symptome.

        generated symptome  # noqa: E501

        :param symptome: The symptome of this Symptome.
        :type symptome: str
        """
        if symptome is None:
            raise ValueError("Invalid value for `symptome`, must not be `None`")  # noqa: E501

        self._symptome = symptome
